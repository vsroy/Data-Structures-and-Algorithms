#include<iostream>
#include<vector>
using namespace std;

int BinarySearch(int val, vector<int>& arr, int high, int low)
{
	if(high < low)
		return -1;
	
	int mid = low + (high - low)/2;
	
	if(arr[mid] == val)
		return mid;
	else if(val < arr[mid])
		return BinarySearch(val, arr, low, mid-1);
	else
		return BinarySearch(val, arr, mid+1,high);
}

int FindPivotElement(vector<int>& arr, int low, int high)
{
	if(high < low)
		return -1;	//No pivot element found		// 6 7 8 1 2 3 4 5
	if(high == low)
		return low;
		
	int mid = low + (high - low) / 2;
	
	if(mid < high && arr[mid] > arr[mid+1])
		return mid;
		
	if(mid > low && arr[mid] < arr[mid-1])
		return mid - 1;
		
	else if(arr[low] >= arr[mid])
		FindPivotElement(arr, low, mid-1);
	else	
		FindPivotElement(arr, mid+1,high);
}

int main()
{
	vector<int> arr{6,7,8,1,2,3,4,5};
	int pivot = FindPivotElement(arr, 0, arr.size()-1);
	if(pivot == -1)
	{
		cout << "Array is not rotated";
		cout << "Value at " << BinarySearch(2, arr, arr.size()-1, 0);
	}
	else
	{
		int leftArrayFound = BinarySearch(2,arr, 0 ,pivot-1);	//Search in the left part
		int rightArrayFound = BinarySearch(2,arr, pivot+1 ,arr.size()-1);	//Search in the right part
		
		if(leftArrayFound != -1)
			cout << "Array at " << leftArrayFound;
		else if(rightArrayFound != -1)
			cout << "Array at " << rightArrayFound;
		else 
			cout << "Element Not present in the array";
	}
	return 0;
}